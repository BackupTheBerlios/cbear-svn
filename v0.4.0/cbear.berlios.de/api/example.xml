<?xml version="1.0"?>
<!--
The MIT License

Copyright (c) 2005 C Bear (http://cbear.berlios.de)

Permission is hereby granted, free of charge, to any person obtaining a copy of 
this software and associated documentation files (the "Software"), to deal in 
the Software without restriction, including without limitation the rights to 
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
the Software, and to permit persons to whom the Software is furnished to do so, 
subject to the following conditions:

The above copyright notice and this permission notice shall be included in all 
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR 
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER 
IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN 
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-->
<?xml-stylesheet type="text/xsl" href="html.xsl"?>
<library 
	xmlns="http://cbear.berlios.de/api"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://cbear.berlios.de/api main.xsd"
	xmlns:html="http://www.w3.org/1999/xhtml"
	id="cbear.berlios.de/api/example"
	brief="C Bear, API Example"
	uuid="C06BCE4E-E1D6-4c62-9A4F-D593091816A6">

<comment>
	<public>
		Example:
		<html:ul>
			<html:li>A</html:li>
			<html:li>B</html:li>
		</html:ul>
	</public>
	<private>
		Example:
		<html:ul>
			<html:li>A</html:li>
			<html:li>B</html:li>
		</html:ul>
	</private>
</comment>

<using id="Base" href="base.xml"/>

<interface id="ITime">
	<property id="Date">
		<get/>
		<type.ref library="Base" id="date"/>
	</property>
	<property id="Clock">
		<get/>
		<type.ref library="Base" id="uint">
			<const value="32"/>
		</type.ref>
	</property>
</interface>

<interface id="IDeviceInfo">
	<property id="Name">
		<get/>
		<type.ref library="Base" id="string"/>
	</property>
</interface>

<interface id="IModuleInfo">
	<type.ref id="IDeviceInfo"/>
</interface>

<interface id="IModuleInfoList">
	<property id="Count">
		<get/>
		<type.ref library="Base" id="int32"/>
	</property>
	<property id="Item">
		<get/>
		<type.ref id="IModuleInfo"/>
		<parameter>
			<in/>
			<type.ref library="Base" id="int32"/>
		</parameter>
	</property>
	<method id="Update"/>
</interface>

<interface id="IMain">
	<method id="Create">
		<type.ref id="IModuleInfo"/>
		<parameter>
			<in/>
			<type.ref library="Base" id="string"/>
		</parameter>
	</method>
	<method id="Reserved">
		<type.ref library="Base" id="vector">
			<type.ref library="Base" id="uint8"/>
		</type.ref>
		<parameter>
			<in/>
			<type.ref library="Base" id="vector">
				<type.ref library="Base" id="uint8"/>
			</type.ref>
		</parameter>
	</method>
	<property id="A">
		<get/>
		<type.ref id="IModuleInfoList"/>
	</property>
</interface>

<interface id="IA"/>
<interface id="IB"/>
<interface id="IC">
	<type.ref id="IA"/>
	<type.ref id="IB"/>
</interface>

<enum id="Mode">
	<item id="Disabled"><const value="0"/></item>
	<item id="Enabled"><const value="1"/></item>
</enum>

<struct id="Data">
	<object id="Number">
		<type.ref library="Base" id="int32"/>
	</object>
	<object id="Array">
		<type.ref library="Base" id="fixed.array">
			<type.ref library="Base" id="uint8"/>
			<const value="4"/>
		</type.ref>
	</object>
</struct>

<object id="Main">
	<type.ref id="IMain"/>
</object>

</library>
