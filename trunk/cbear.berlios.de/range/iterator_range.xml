<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../cpp/html.xsl"?>
<unit 
	xmlns="http://cbear.berlios.de/cpp" 
	id="cbear.berlios.de/range/iterator_range"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://cbear.berlios.de/cpp ../cpp/main.xsd">
<header>
<namespace id="cbear_berlios_de">
<namespace id="range">
	<template>
		<id id="Iterator"/>
		<class>
			<id.ref id="iterator_range"/>
			<access access="public">
				<id.ref type="::">
					<id.ref id="policy"/>
					<id.ref id="wrap" type="&lt;&gt;">
						<id.ref id="iterator_range" type="&lt;&gt;">
							<id.ref id="Iterator"/>
						</id.ref>
						<id.ref type="::">
							<id.ref/>
							<id.ref id="std"/>
							<id.ref id="pair" type="&lt;&gt;">
								<id.ref id="Iterator"/>
								<id.ref id="Iterator"/>
							</id.ref>
						</id.ref>
					</id.ref>
				</id.ref>
				<id.ref id="helper" type="&lt;&gt;">
					<id.ref id="iterator_range" type="&lt;&gt;">
						<id.ref id="Iterator"/>
					</id.ref>
					<id.ref id="Iterator"/>
					<id.ref id="Iterator"/>
				</id.ref>
				<typedef id="iterator">
					<id.ref id="Iterator"/>
				</typedef>
				<typedef id="const_iterator">
					<id.ref id="Iterator"/>
				</typedef>
				<typedef id="internal_type">
					<id.ref type="::">
						<id.ref/>
						<id.ref id="std"/>
						<id.ref id="pair" type="&lt;&gt;">
							<id.ref id="Iterator"/>
							<id.ref id="Iterator"/>
						</id.ref>
					</id.ref>
				</typedef>
				<method id="iterator_range"/>
				<method id="iterator_range">
					<parameter>
						<id.ref type="&amp;">
							<id.ref type="const"><id.ref id="iterator"/></id.ref>
						</id.ref>
					</parameter>
					<parameter>
						<id.ref type="&amp;">
							<id.ref type="const"><id.ref id="iterator"/></id.ref>
						</id.ref>
					</parameter>
				</method>
				<method id="iterator_range">
					<explicit/>
					<parameter>
						<id.ref type="&amp;">
							<id.ref type="const"><id.ref id="internal_type"/></id.ref>
						</id.ref>
					</parameter>
				</method>
				<template>
					<id id="Range"/>
					<method id="iterator_range">
						<explicit/>
						<parameter>
							<id.ref type="&amp;">
								<id.ref type="const"><id.ref id="Range"/></id.ref>
							</id.ref>
						</parameter>
					</method>
				</template>
				<template>
					<id id="Range"/>
					<method id="iterator_range">
						<explicit/>
						<parameter>
							<id.ref type="&amp;"><id.ref id="Range"/></id.ref>
						</parameter>
					</method>
				</template>
				<method id="begin">
					<id.ref id="iterator"/>
					<const/>
				</method>
				<method id="end">
					<id.ref id="iterator"/>
					<const/>
				</method>
			</access>
		</class>
	</template>
	<template>
		<id id="Iterator"/>
		<method id="make_iterator_range">
			<id.ref id="..."/>
			<parameter>
				<id.ref type="&amp;">
					<id.ref type="const"><id.ref id="Iterator"/></id.ref>
				</id.ref>
			</parameter>
			<parameter>
				<id.ref type="&amp;">
					<id.ref type="const"><id.ref id="Iterator"/></id.ref>
				</id.ref>
			</parameter>
		</method>
	</template>
	<template>
		<id id="Iterator"/>
		<method id="make_iterator_range">
			<id.ref id="..."/>
			<parameter>
				<id.ref type="&amp;">
					<id.ref type="const">
						<id.ref type="::">
							<id.ref/>
							<id.ref id="std"/>
							<id.ref id="pair" type="&lt;&gt;">
								<id.ref id="Iterator"/>
								<id.ref id="Iterator"/>
							</id.ref>
						</id.ref>
					</id.ref>
				</id.ref>
			</parameter>
		</method>
	</template>
	<template>
		<id id="Range"/>
		<method id="make_iterator_range">
			<id.ref id="..."/>
			<parameter>
				<id.ref type="&amp;">
					<id.ref type="const"><id.ref id="Range"/></id.ref>
				</id.ref>
			</parameter>
		</method>
	</template>
	<template>
		<id id="Range"/>
		<method id="make_iterator_range">
			<id.ref id="..."/>
			<parameter>
				<id.ref type="&amp;"><id.ref id="Range"/></id.ref>
			</parameter>
		</method>
	</template>
</namespace>
</namespace>
</header>
</unit>
